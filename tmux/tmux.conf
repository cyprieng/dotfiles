# General settings
set -s focus-events on
setw -g xterm-keys on
set -g mouse on
set-option -g repeat-time 250
set -g mode-keys vi

# Reload configuration keymap
bind r run "sh -c '/opt/homebrew/bin/tmux source ~/.config/tmux/tmux.conf'" \; display "Config sourced"

# -- Display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# Set autoname for windows
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_command} - #{b:pane_current_path}'

set -gq allow-passthrough on
set -g visual-activity off

# -- Navigation ----------------------------------------------------------------

# Create session
bind C-c new-session

# Copy mode
bind 'v' copy-mode

# Split current window horizontally
bind - split-window -v -c "#{pane_current_path}"

# Split current window vertically
bind _ split-window -h -c "#{pane_current_path}"

# Swap pane
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Window navigation
bind Tab last-window        # move to last active window

# Kill without confirmation
bind-key x kill-pane

# Handle home/end keys
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Neovim keybindings
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize panes
bind -r Up if-shell "$is_vim" 'send-keys Space Up' 'resize-pane -U 5'
bind -r Down if-shell "$is_vim" 'send-keys Space Down' 'resize-pane -D 5'
bind -r Left if-shell "$is_vim" 'send-keys Space Left' 'resize-pane -L 5'
bind -r Right if-shell "$is_vim" 'send-keys Space Right' 'resize-pane -R 5'

# Move status line to top
set -g status-position top

# TokyoNight colors for Tmux
set -g mode-style "fg=#82aaff,bg=#3b4261"
set -g message-style "fg=#82aaff,bg=#3b4261"
set -g message-command-style "fg=#82aaff,bg=#3b4261"
set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=#82aaff"

# TPM plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @plugin 'sainnhe/tmux-fzf'

# Initialize TMUX plugin manager
set-environment -g PATH "/opt/homebrew/bin:/bin:/usr/bin"
run '~/.config/tmux/plugins/tpm/tpm'
